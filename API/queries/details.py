details_query = {

"GET_SITES": """SELECT ID AS [value], SITE_NAME AS [label] FROM SITE""",
"GET_WAREHOUSES": """SELECT ID AS [value], DESCRIPTION AS [label] FROM WAREHOUSE""",

"GET_INDIRECT_CODES": """SELECT ROWID, ID AS [value], DESCRIPTION AS [label] FROM INDIRECT""",


"GET_LABOR_TICKETS": """SELECT 
                        ULAB.TRANSACTION_ID, ULAB.WORKORDER_BASE_ID,  
                        CONCAT(CONVERT(VARCHAR(10), ULAB.WORKORDER_LOT_ID), ' - ', CONVERT(VARCHAR(10), ULAB.WORKORDER_SPLIT_ID), ' - ',  CONVERT(VARCHAR(10), ULAB.WORKORDER_SUB_ID)) AS [LOT_SPLIT_SUB],
                        CAST(ULAB.CLOCK_IN AS DATE) AS [CLOCK_IN_DATE], CONVERT(VARCHAR(8), ULAB.CLOCK_IN, 108) AS [CLOCK_IN_TIME], CAST(ULAB.CLOCK_OUT AS DATE) AS [CLOCK_OUT_DATE], CONVERT(VARCHAR(8), ULAB.CLOCK_OUT, 108) AS [CLOCK_OUT_TIME],
                        ULAB.HOURS_WORKED/60 AS [HOURS_WORKED], ULAB.HOURS_BREAK/60 AS [HOURS_BREAK], ULAB.INDIRECT_CODE, ULAB.INDIRECT_ID,
                        CASE WHEN ULAB.APPROVED = 0 THEN 'false'
                            WHEN ULAB.APPROVED = 1 THEN 'true' ELSE 'false' END AS [APPROVED] ,
                        ULAB.APPROVED_AT, ULAB.APPROVED_BY,
                        ULAB.DESCRIPTION AS [LAB_DESC], ULAB.UDF1, ULAB.UDF2, ULAB.UDF3, ULAB.UDF4, ULAB.WORK_LOCATION, ULAB.REGULAR_TIME, ULAB.OVER_TIME, ULAB.DOUBLE_TIME, ULAB.QA_NOTES,
                        WO.PART_ID, WO.DESIRED_QTY, CAST(WO.DESIRED_WANT_DATE AS DATE) AS [DESIRED_WANT_DATE], WO.STATUS, WO.ENGINEERED_BY, WO.ACT_MATERIAL_COST, WO.ACT_LABOR_COST, WO.ACT_SERVICE_COST, 
                        CO.ID, CO.CUSTOMER_ID, CO.CUSTOMER_PO_REF, CO.STATUS, CO.TOTAL_AMT_ORDERED, CO.TOTAL_AMT_SHIPPED, PART.DESCRIPTION, ULAB.EMPLOYEE_ID, ULAB.VISUAL_LAB_TRANS_ID
                        FROM UNI_LABOR_TICKET ULAB
                        LEFT JOIN WORK_ORDER WO ON WO.BASE_ID = ULAB.WORKORDER_BASE_ID AND WO.LOT_ID = ULAB.WORKORDER_LOT_ID AND WO.SPLIT_ID = ULAB.WORKORDER_SPLIT_ID AND WO.SUB_ID = ULAB.WORKORDER_SUB_ID AND WO.TYPE = 'W'
                        LEFT JOIN DEMAND_SUPPLY_LINK DSL ON DSL.SUPPLY_BASE_ID = ULAB.WORKORDER_BASE_ID AND DSL.SUPPLY_LOT_ID = ULAB.WORKORDER_LOT_ID AND DSL.SUPPLY_SPLIT_ID = ULAB.WORKORDER_SPLIT_ID AND DSL.SUPPLY_SUB_ID = ULAB.WORKORDER_SUB_ID
                        LEFT JOIN PART ON PART.ID = WO.PART_ID
                        LEFT JOIN CUSTOMER_ORDER CO ON CO.ID = DSL.DEMAND_BASE_ID
                        WHERE CONVERT(DATE, TRANSACTION_DATE) BETWEEN '{FROM_DATE}' AND '{TO_DATE}' {EMP_ID_QUERY_STRING} {APPROVED_QUERY_STRING}""",

"GET_ACTIVE_LABOR_TICKETS": """SELECT 
                                ULAB.TRANSACTION_ID, ULAB.WORKORDER_BASE_ID,  
                                CONCAT(CONVERT(VARCHAR(10), ULAB.WORKORDER_LOT_ID), ' - ', CONVERT(VARCHAR(10), ULAB.WORKORDER_SPLIT_ID), ' - ',  CONVERT(VARCHAR(10), ULAB.WORKORDER_SUB_ID)) AS [LOT_SPLIT_SUB],
                                CAST(ULAB.CLOCK_IN AS DATE) AS [CLOCK_IN_DATE], CONVERT(VARCHAR(8), ULAB.CLOCK_IN, 108) AS [CLOCK_IN_TIME],
                                ULAB.HOURS_WORKED / 60 AS [HOURS_WORKED], ULAB.HOURS_BREAK /60 AS [HOURS_BREAK], ULAB.EMPLOYEE_ID,
                                CASE WHEN ULAB.APPROVED = 0 THEN 'false'
                                    WHEN ULAB.APPROVED = 1 THEN 'true' ELSE 'false' END AS [APPROVED],
                                ULAB.APPROVED_AT, ULAB.APPROVED_BY,
                                ULAB.DESCRIPTION AS [LAB_DESC], ULAB.UDF1, ULAB.UDF2, ULAB.UDF3, ULAB.UDF4, ULAB.WORK_LOCATION, ULAB.REGULAR_TIME, ULAB.OVER_TIME, ULAB.DOUBLE_TIME, ULAB.QA_NOTES,
                                WO.PART_ID, WO.DESIRED_QTY, CAST(WO.DESIRED_WANT_DATE AS DATE) AS [DESIRED_WANT_DATE], WO.STATUS, WO.ENGINEERED_BY, WO.ACT_MATERIAL_COST, WO.ACT_LABOR_COST, WO.ACT_SERVICE_COST, 
                                CO.ID, CO.CUSTOMER_ID, CO.CUSTOMER_PO_REF, CO.STATUS, CO.TOTAL_AMT_ORDERED, CO.TOTAL_AMT_SHIPPED, PART.DESCRIPTION, ULAB.INDIRECT_ID, ULAB.INDIRECT_CODE
                                FROM UNI_LABOR_TICKET ULAB
                                LEFT JOIN WORK_ORDER WO ON WO.BASE_ID = ULAB.WORKORDER_BASE_ID AND WO.LOT_ID = ULAB.WORKORDER_LOT_ID AND WO.SPLIT_ID = ULAB.WORKORDER_SPLIT_ID AND WO.SUB_ID = ULAB.WORKORDER_SUB_ID AND WO.TYPE = 'W'
                                LEFT JOIN DEMAND_SUPPLY_LINK DSL ON DSL.SUPPLY_BASE_ID = ULAB.WORKORDER_BASE_ID AND DSL.SUPPLY_LOT_ID = ULAB.WORKORDER_LOT_ID AND DSL.SUPPLY_SPLIT_ID = ULAB.WORKORDER_SPLIT_ID AND DSL.SUPPLY_SUB_ID = ULAB.WORKORDER_SUB_ID
                                LEFT JOIN PART ON PART.ID = WO.PART_ID
                                LEFT JOIN CUSTOMER_ORDER CO ON CO.ID = DSL.DEMAND_BASE_ID
                                WHERE ISNULL(HOURS_WORKED, HOURS_BREAK) IS NULL --OR HOURS_BREAK IS NULL
                                ORDER BY TRANSACTION_DATE DESC """,

"GET_ALL_EMPLOYEE_HOURS_KPI": """SELECT DISTINCT EMPLOYEE_ID,
                                (SELECT SUM(HOURS_WORKED) FROM UNI_LABOR_TICKET WHERE EMPLOYEE_ID = LAB.EMPLOYEE_ID AND TYPE = 'R' AND DATEPART(ISO_WEEK, TRANSACTION_DATE) = DATEPART(ISO_WEEK, GETDATE())) /60 AS [TOTAL_WEEK_HRS],
                                (SELECT SUM(HOURS_WORKED) FROM UNI_LABOR_TICKET WHERE EMPLOYEE_ID = LAB.EMPLOYEE_ID AND TYPE = 'R' AND  CONVERT(DATE, TRANSACTION_DATE) =  CONVERT(DATE, GETDATE())) /60 AS [TOTAL_TODAY_HRS] 
                                FROM UNI_LABOR_TICKET LAB""",

"GET_LABOR_TICKET_BY_ID": """SELECT ULAB.*,
                                CONCAT(CONVERT(VARCHAR(10), ULAB.WORKORDER_LOT_ID), ' - ', CONVERT(VARCHAR(10), ULAB.WORKORDER_SPLIT_ID), ' - ',  CONVERT(VARCHAR(10), ULAB.WORKORDER_SUB_ID)) AS [LOT_SPLIT_SUB],
                                CAST(ULAB.CLOCK_IN AS DATE) AS [CLOCK_IN_DATE], CONVERT(VARCHAR(8), ULAB.CLOCK_IN, 108) AS [CLOCK_IN_TIME],
                                CAST(ULAB.CLOCK_OUT AS DATE) AS [CLOCK_OUT_DATE], CONVERT(VARCHAR(8), ULAB.CLOCK_OUT, 108) AS [CLOCK_OUT_TIME],
                                (ULAB.HOURS_WORKED / 60) AS [HOURS_WORKED_HRS], 
                                CASE WHEN ULAB.APPROVED = 0 THEN 'false'
                                    WHEN ULAB.APPROVED = 1 THEN 'true' ELSE 'false' END AS [APPROVED] ,
                                ULAB.DESCRIPTION AS [LAB_DESC],
                                WO.PART_ID, WO.DESIRED_QTY, CAST(WO.DESIRED_WANT_DATE AS DATE) AS [DESIRED_WANT_DATE], WO.STATUS, WO.ENGINEERED_BY, WO.ACT_MATERIAL_COST, WO.ACT_LABOR_COST, WO.ACT_SERVICE_COST, 
                                CO.ID, CO.CUSTOMER_ID, CO.CUSTOMER_PO_REF, CO.STATUS, CO.TOTAL_AMT_ORDERED, CO.TOTAL_AMT_SHIPPED, PART.DESCRIPTION, 
                                ULAB.*
                                FROM UNI_LABOR_TICKET ULAB
                                LEFT JOIN WORK_ORDER WO ON WO.BASE_ID = ULAB.WORKORDER_BASE_ID AND WO.LOT_ID = ULAB.WORKORDER_LOT_ID AND WO.SPLIT_ID = ULAB.WORKORDER_SPLIT_ID AND WO.SUB_ID = ULAB.WORKORDER_SUB_ID AND WO.TYPE = 'W'
                                LEFT JOIN DEMAND_SUPPLY_LINK DSL ON DSL.SUPPLY_BASE_ID = ULAB.WORKORDER_BASE_ID AND DSL.SUPPLY_LOT_ID = ULAB.WORKORDER_LOT_ID AND DSL.SUPPLY_SPLIT_ID = ULAB.WORKORDER_SPLIT_ID AND DSL.SUPPLY_SUB_ID = ULAB.WORKORDER_SUB_ID
                                LEFT JOIN PART ON PART.ID = WO.PART_ID
                                LEFT JOIN CUSTOMER_ORDER CO ON CO.ID = DSL.DEMAND_BASE_ID
                                WHERE TRANSACTION_ID = {TRANSACTION_ID}""",

"GET_ALL_DOCUMENTS_IMAGES_BY_ID": """SELECT * 
                                    FROM UNI_DOCUMENTS
                                    WHERE TRANSACTION_ID = '{TRANSACTION_ID}'
                                    ORDER BY CREATE_DATE DESC""",

"GET_DATA_FOR_CREATING_LABOR_TICKET_IN_VISUAL": """SELECT TRANSACTION_ID,
                                                    CASE WHEN TYPE = 'R' THEN 'RUN'
                                                    WHEN TYPE = 'I' THEN 'INDIRECT' ELSE '' END AS 'TRANSACTION_TYPE',
                                                    WORKORDER_BASE_ID, WORKORDER_LOT_ID, WORKORDER_SPLIT_ID, WORKORDER_SUB_ID, OPERATION_SEQ_NO, CLOCK_IN, CLOCK_OUT, 
                                                    CASE WHEN TYPE = 'R' THEN HOURS_WORKED
                                                    WHEN TYPE = 'I' THEN HOURS_BREAK ELSE '' END AS 'HOURS_WORKED',
                                                    REGULAR_TIME, DOUBLE_TIME, OVER_TIME, DESCRIPTION, EMPLOYEE_ID, INDIRECT_CODE
                                                    FROM UNI_LABOR_TICKET
                                                    WHERE APPROVED = 1 AND VISUAL_LAB_TRANS_ID IS NULL"""
}